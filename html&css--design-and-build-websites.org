* html & css - design and build websites
  Official website: http://www.htmlandcssbook.com/code-samples/. All source codes can be downloaded.
** general idea
   - The book gives manmy practical advices, not only the knowledge points. This makes the book a good one.
   - class name such as 'align-left' is formatting aimed.
   
** chapter 1 structure
   Every document has a structure. Structure makes a document more readable. In html files, elements are used to add structure. In this chapter, ~h1~ (main heading), ~h2~ (sub heading), ~p~ are introduced.

   Tag attribute, head and title element. Create a html page using notepad.

   Simple and short.
** chapter 2 text
   Two type of elements:
   1. structure element. Such as ~h1~, ~p~.
   2. semantic element. Such as ~em~, ~sup~, ~cite~.

   Elements introduced in this chapter:
   | element    | description                           | example                   |
   |------------+---------------------------------------+---------------------------|
   | b          | bold                                  | this is <b> not</b> a dog |
   | i          | italic                                | Is this a <i>dog</i>?     |
   |------------+---------------------------------------+---------------------------|
   | strong     | important item, usually in bold       | <strong>XXX</strong>      |
   | em         | emphasize, usually in italic          | <em>XXX</em>              |
   | sup        | superscript                           | EM<sup>2</sup>            |
   | sub        | subscript                             | H<sub>2</sub>O            |
   | del        | deleted content, together with ins    | He <del>come</del><ins>   |
   |            | element to display content change.    | comes</ins> lately.       |
   |            | A line through the word               |                           |
   | ins        | new added content. underscore         |                           |
   | s          | something no longer correct, but      | such as a price           |
   |            | should not be deleted. a line through |                           |
   | blockquote | long quote. will be indented.         | <blockquote><p>XXXXX</p>  |
   |            | cite attribute indicates where the    | </blockquote>             |
   |            | quote from(a URL).                    |                           |
   | q          | short word quote. Will be surround    | <q>XXXX</q>               |
   |            | by "". But IE not works.              |                           |
   |            | also has cite attribute.              |                           |
   | cite       | used to refer book names              |                           |
   | abbr       | used to abbrivation. title attibute   | <abbr title="defintion    |
   |            | specify the whold words               | of done">DOD</abbr>       |
   | dfn        | used to new terms.                    | A <dfn>Black hole</dfn>.  |
   | address    | contact details for the author        |                           |
   |            | italic                                |                           |
   |------------+---------------------------------------+---------------------------|
   | br         | line break                            | <br />                    |
   | hr         | horizontal rule                       | <hr />                    |
   |            |                                       | Note: the blank and /.    |
   |------------+---------------------------------------+---------------------------|
   Note: some are semantic element, some are structure element.
   
   About white spaces in html documents: two or more spaces are treated as one. This is called *white space collasping*.

   On semantic elements: the purpose is to describe the content more accurately. Should not be used only for changing apprance.

*** comments
    1. I use semantic element very little.
    2. why semantic element should be used?
    3. html5 add many structure elements such as section, artical, nav.
** chapter 3 list
   Three types of list:
   - ordered list :: use numbers
   - unordered list :: use bullet
   - definition list :: used to define terminology
     
   And list can be nested.
   Examples:
   #+begin_src html
   <ol>
     <li>list item 1</li>
     <li>list item 2</li>
   </ol>
   
   <ul>
     <li>A nested list
       <ol>
         <li>aaaaa</li>
         <li>bbbbb</li>
       </ol>
     </li>
   </ul>
   
   <dl>
     <dt>Definition term</dt>
     <dd>definiton descript</dd>
     <dt>aaa1</dt>
     <dt>aaa2</dt>
     <dd>Definiton for aaa1 and aaa2</dd>
   </dl>
   #+end_src

** chapter 4 link
   #+begin_src html
   <a href="URL">Link </a>
   #+end_src

   User can click any content between <a> and </a> to go to the link.
   
   Value of href property can be:
   | type         | syntax        | description                                   |
   |--------------+---------------+-----------------------------------------------|
   | absolute url | www.baidu.com |                                               |
   | relative url | index.html    |                                               |
   | position     | #top          | top is the id value of an element in the page |
   | email        | mailto:a@b.c  | open mail client and send that mail           |
   Note: Position can be used together with urls.

   Open url in a new window: use the target property, and set value to "_blank". Should avoid use this, but if it is really needed, a good practice is inform the user first before open in new window.

** chapter 5 image
   #+begin_src html
   <img src="images/logo.png" alt="CA Company" title="CA is a company form USA" />
   #+end_src

   - size :: the specified size same as real size.
   - format :: jpeg for photograph(which has lots of color), png or gif for logo or illustrations(which has many part of flat color).
   - resolution :: browser display picture in 72 ppi. I don't know meaning of resolution.
     
   Other property
   - width and height.
   - align. left and right for horizontal align, top, middle, bottom for vertical align. *This property is deleted in html5*. Align left has the same effect as float left(align right as float right).

   New element introduced by html5:
   - figure. Associates an img element with a caption
   - figcaption. figure caption.
   - example
     #+begin_src html
     <figure>
       <img src="Food.jpeg" alt="Food" />
       <figcaption>All kinds of food</figcaption>
     </figure>
     #+end_src
     Notes: more than one img elements are allowed if there share same caption.
   
   Vector image: draw dots in grid and fill line and color dynamiclly, so that when scaled, the quality will not lose.

   Animate gif: a gif made of several frames, each of which display a different image.

   image thranpanrency. if the Transpenry part is straight, use gif, else use PNG. And if partically transpenry, also use PNG.
     
   On resolution:
   From book 2, when image displayed in screen, resolution has no meaning, only pinexes make sence. I think resolution only related to displaying devices, not image itself.
** chapter 6 table
   - element
     | name  | description                                | example |
     |-------+--------------------------------------------+---------|
     | table | root element                               |         |
     | tr    | table row                                  |         |
     | td    | table data. Each cell                      |         |
     | th    | also table cell, but represent a head cell |         |
     |-------+--------------------------------------------+---------|
     | thead | table head row                             |         |
     | tbody | table body                                 |         |
     | tfoot | table foot row                             |         |
     |       | Note: the above 3 are for long tables      |         |
     Note:
     - th will be displayed bold, centering. td is left align.
     - th can take an attribute ~scope~ to specify it is for ~row~ or ~col~.
       
   - attributes
     - td, th
       | name    | descrition               | example          |
       |---------+--------------------------+------------------|
       | colspan | column number for a cell | <td colspan="2"> |
       | rowspan | row number for a cell    | <td rowspan="3"> |
       
   - deprecated attributes
     | name        | description                | example                  |
     |-------------+----------------------------+--------------------------|
     | width       | on a table, the width      | <table width="400"       |
     | cellpadding | like pading for an element |                          |
     | cellspacing | like margin for an element |                          |
     | border      | border width               | <table border="2"        |
     | bgcolor     | background color           | <table bgcolor="#aabbcc" |
     Note: 
     - all above value's unit is pinxl
     - use css instead of these attributes for new websites
   - example
     #+begin_src html :tangle table_example.html
     <!DOCTYPE html>
     <head>
       <title>Table</title>
       <style>
         /* achieve <table border="1">*/
         table, td, th {
         border: 1px solid;
         }
       </style>
     </head>
     <body>
       <table>
         <tr>
           <th></th>
           <th>Mon</th>
           <th>Tus</th>
           <th>Wen</th>
           <th>Thu</th>
           <th>Fri</th>
           <th>San</th>
           <th>Sun</th>
         </tr>
         <tr>
           <th>8:00-9:30</th>
           <td rowspan="2">Math</td>
           <td>English</td>
           <td>History</td>
           <td>Physicics</td>
           <td>Chemistry</td>
           <td rowspan="4">Play</td>
           <td rowspan="4">Play</td>
         </tr>
         <tr>
           <th>10:00-11:30</th>
           <td>English</td>
           <td>History</td>
           <td>Physicics</td>
           <td>Chemistry</td>
         </tr>
         <tr>
           <th>14:00-15:30</th>
           <td>Math</td>
           <td>English</td>
           <td>History</td>
           <td>Physicics</td>
           <td>Chemistry</td>
         </tr>
         <tr>
           <th>16:00-17:30</th>
           <td>Math</td>
           <td>English</td>
           <td>History</td>
           <td>Physicics</td>
           <td>Chemistry</td>
         </tr>
         <tr>
           <th>19:00-21:30</th>
           <td colspan="7"> Self study</td>
         </tr>
       </table>
     </body>
     #+end_src
** chapter 7 form
   - points
     - difference between ~button~ element and ~input submit~ or ~input image~. ~button~ allow more flexiable apperance of a summit button, because the apperance is done by the html codes insides the element. While ~input submit~ or ~input image~ are all empty element, so the apperance is fixed.
     - difference between radio button and selection list. They have same function. Use radio button when the selection number is small(so that user can see all at a glance), otherwise use selection list.
   - elements
     | name           | desription                                 | example |
     |----------------+--------------------------------------------+---------|
     | form           |                                            |         |
     | input text     | plain text                                 |         |
     | input password | password, will not shown                   |         |
     | input radio    | radio button. Can only select one          |         |
     | input checkbox | checkbox. Can select many                  |         |
     | input submit   | submit button of the form. value attribute |         |
     |                | specify the displayed text                 |         |
     | input image    | submit button but display an image         |         |
     | button         | submit button but display any data         |         |
     | select         | selection list. Has many option element    |         |
     | textarea  | multiple line input                        |         |
     | fieldset       | used to group many input control in a      |         |
     |                | large form                                 |         |
     | legend         | legend for a fieldset            |         |
     | label          | the label for an input control             |         |
     Notes:
     - button, label, select, textarea, caption are non emepty element, all other are empty.
     - broswer will draw a border for each fieldset.

   - attributes
     - form
       | name   | descrition                                 | example |
       |--------+--------------------------------------------+---------|
       | action | the url that this form will be sent to     |         |
       | method | get or post. Use post when 1. secure data; |         |
       |        | 2. very long data                          |         |

     - textarea
       | name | descrition                    | example |
       |------+-------------------------------+---------|
       | cols | column number of the textarea |         |
       | rows | row number                    |         |

     - input text
       | name      | descrition                                      | example                  |
       |-----------+-------------------------------------------------+--------------------------|
       | size      | the length of the input text in character count | seems this is deprecated |
       | maxlength | the maximum character that can be inputted      |                          |

   - on label
     - each input control should has a label element, which is used to describe the meaning of that input control. And it also helps the eye impaired to use the form.
     - position of the label.
       - left or above: input text, input area, select list, password
       - right: radio, checkbox
     - method of associating a label with an input control
       - the label element wrap the input control
       - use the ~for~ attribute of label element, the value is the ~id~ attribute of the target input control.
   - on html5 element
     html5 add some input type, and add validation of the data, such as an email, a url.
   - example
     #+begin_src html :tangle form_example.html
     <!DOCTYPE html>
     <head>
       <title>Form</title>
     </head>
     <body>
       <form action="aaa.html" method="get">
         <fieldset>
           <legend> Your Details:</legend>
           <label>Name:<input type="text" name="name" size="60" required="required"/></label> <br />
           <label>Email:<input type="email" name="email" size="60" required="required"/></label> <br />
         </fieldset>
         <fieldset>
           <legend> Your Review:</legend>
           <p>
             <label>How did you hear about us?
               <select name="how">
                 <option value="google">Google</option>
                 <option value="newspaper">Newspaper</option>
                 <option value="tv">TV</option>
               </select>
             </label>
           </p>
           <p>
             Would you visit again?<br />
             <label> <input type="radio" name="visit" value="yes" checked="checked"> Yes</label>
             <label> <input type="radio" name="visit" value="no"> No</label>
             <label> <input type="radio" name="visit" value="maybe"> Maybe</label>
           </p>
           <p>
             <label>Comments:<br />
               <textarea name="comments" rows="3" cols="70"></textarea>
             </label>
           </p>
           <label><input type="checkbox" name="signup" value="signup" checked="checked">
             Sign me up for email updatas
           </label > <br />

           <input type="submit" value="Submit review">
         </fieldset>
       </form>
     </body>
     #+end_src
     Note:
     - use <p> for some elements. They are really some paragraph
     - legend not need a <br>

** chapter 8 extra markup
   - toc
     - indicate html version
       - representation elements in html4 are deleted, such as 
         - center: center a text
         - strike: put a line through a text
         - font: set font
         They can all be achieved by CSS.
       - ~<!DOCTYPE html>~ for html 5
       - ~<!DOCTYPE html PUBLIC
           "" ".....dtd">~ for html 4
         
     - add comments
       ~<!-- comment goes here -->~
     - global attributes
       - id. unique elemnts.
       - class. a group of similar elements.
       The two elemtns are maily use for set different apprance 
     - grouping elements
       - grouping elements in a block
         By use of div elements. The content of div elements will start on a new line, but other than this it will make no difference to the presentation of the page.

       - grouping elements inline
         By use of span. span is the inline equivalent of div. People use span mainly for control the appearence of the content. span element can contain other inline elements.
     - embeded a html page in a html page using iframe
       Using the iframe elememnt(inline frame). Attributes:
       - src :: the url of the target page
       - width :: the width in pixels
       - height :: the height in pixels
     - add info by meta element
       set key value pairs for this page. Typical ones are:
       | name        | content  | description                                           |
       | description |          | the description of this page, at most 155 characters. |
       |             |          | used by search engine. Sometimes it will also be      |
       |             |          | displayed in result of SE.                            |
       | keywords    |          | seperated by comma. No has little effect on SEO       |
       | robots      | noindex  | this page should not be added to search result        |
       |             | nofollow | this page can be added but not the pages it links to  |
       
       | http-equiv | content                       | description                               |
       |------------+-------------------------------+-------------------------------------------|
       | author     |                               | the author of the page                    |
       | pragma     | no-cache                      | prevent the browser from caching the page |
       | expires    | Sun, 07 Aug 2016 16:33:07 GTM | When the page will expires(so that cached) |
       |            |                               | should be updated                          |
       
       examples:
       #+begin_src html
       <meta name="description" content="Books on programming" />
       <meta name="keywords" content="book, programming" />
       <meta name="robots" content="noindex" />
       <meta http-equiv="author" content="Astropeak" />
       <meta http-equiv="pragma" content="no-cache" />
       <meta http-equiv="expires" content "Sun, 07 Aug 2016 16:00:00 GTM" />
       #+end_src

     - insert special characters, such as copyright, <.
       Search ~escape codes~. some examples:
       | code    | represent char |
       |---------+----------------|
       | &lt;    | <              |
       | &gt;    | >              |
       | &amp;   | &              |
       | &quot;  | "              |
       | &copy;  | copyright sign |
       | &reg;   | register sign  |
       | &trade; | trademark sign |
       | &times; | X              |
       | &divide | divide sign    |
** chapter 9 flash, video and audio
   - An code example that plays flash file
     #+begin_src html :tangle flash_test.html
     <!DOCTYPE html>
     <head>
       <script type="text/javascript" src="./html&css--design-and-build-websites/swfobject.js"> </script>
       <script type="text/javascript">
         swfobject.embedSWF("./html&css--design-and-build-websites/Car-speakers-590x90.swf", "car", "590", "90", "8.0.0");
       </script>
     </head>
     <body>
       <div id="car"><p>Your browser doesn't support flash.</p></div>
     </body>
     #+end_src
     Notes:
     - swfobject's github officail page says flash is dead, the project was not maintained any more and the developers moved to other project. So no need to try it anymore I think.
     - At first I wrote "test/javascript" mistakenly, so the code not works.
   - reasons for why flash will dead
     - In 2005, many js library(such jquery, prototype) created that supporting making simple animation
     - In 2007, apple's iphone doesn't support flash
     - In 2008, html5 support playing video or audio using video or audio element
     - flash can't be used by disabled.
*** TODO practice this latter
    - Note taken on [2016-08-08 Mon 15:42] \\
      to page 212
    - State "TODO"       from ""           [2016-08-08 Mon 15:42]

       
       
   
** chapter 10 introducing CSS
   - browser quirks or CSS bug
     - Some browser may display an element unexpected.
     - Cross browser testing is a good way to find this type of problems. If an element displays abnormal in one browser while OK in all other browsers, then it must the bug of that browser. Cross browser testing tools:
       - browsercam.com
       - browserlab.adobe.com
       - browsershots.org
       - CrossBrowserTesting.com
     - two websites on this topic
       - PositionIsEverything.net. Lots of artical on this website.
       - QuirksMode.org :: This website list if css property, selectors are supported by many browser(different version). Quite comprehensive. Over 16 years old. And also has a js section(the author claimed it is the largest section) that describe practical js knowledge. Such as object detection ~http://quirksmode.org/js/support.html~
   - css inheritance
     - use ~inherit~ as property's value to inherit it from parent element
     - Some property will inherit value from parent, some will not.
   - cascade rule
     - last rule. last rule will overide former one.
     - specificity. More specific a selector, the higher priority.
     - IMPORTANT. ~!important~ decorator will make the rule the highest priority.
       
** chapter 11 color
   - color terminology
     #+begin_src css
     red #ff0000
     green #00FF00 rgb(0,255,0)
     blue #0000FF
     #+end_src
     Why green is different?

   - contrast
     - Too high or too low contrast will all make the text hard to read
     - for reversed out text, larger line height and big font weight make it easier to read.
     - contrast check tool: https://snook.ca/technical/colour_contrast/colour.html#fg=000000,bg=AEAEAE. The page will calculate two value, which should pass the threshhold.
   - select single element by assigning "class" such as "one", "two".
   - HSL color
     - hue: a color in color circle. 0-360. 0 is red, 120 is green, 240 is blue.
     - saturation: ammount of grey. 0%-100%. the larger, the bright-coloured.
     - lightness: the ammount of white or black. 0-100. 0% is black, 100% is white, 50% is normal.
     - examples
       #+begin_src css
       hsl(0,100,100) = rgb(255,0,0)
       #+end_src
   - opacity
     - rgba
     - hsla
     - for browser that not support a, use rgb as fallback to rgba.
       #+begin_src css
       p {
           color: rgb(255,0,0);
           color: rgba(255,0,0,0.5);
       }
       #+end_src
** chapter 12 text
   - typeface
     - Five typefaces and some font names of that type
       - serif. Georgia, Times, Times New Roman. 
       - sans-serif. Arial, Verdana, Helvetica.
       - monospace. Courier, Courier New.
       - cursive. Comic Sans MS, Monotype Corsiva.
       - fantacy. Impact, Haettenschweiler.
     - browsers are supposed to supported at least one font for all five typefaces.
     - At most 3 font type in one page considered good.
   - font-family peroperty is used to set typeface, its value is a font stack(a list of font seperated by comma). If first font is not installed in the browser, then the second will be tried. Examples:
     #+begin_src css
     body {
         font-family: Georgia, "Times New Roman", Serif;
     }
     #+end_src
     Notes:
     - If there are spaces in font type name, then font name should be encolsed in "".
     - Put a generic font type such as 'Serif', 'Sans-Serif' in case all ahead font are not installed.
   - other property of a font except type
     - weight. [Light, Medium, Bold, Black]. Specify the stroke width.
     - style. [Normal, Italic, Oblique]. Oblique is put Normal on an angle.
     - stretch. [Condensed, Regular, Extended]. The width of character.
   - font scale. 8pt, 9, 10, 11, 12, 14, 18, 24, 36, 48, 60, 72. Developed 400 years ago and changed little.
     - two common font scale scheme for a webpage.
       | element | scheme 1 | scheme 2 | comment    |
       |---------+----------+----------+------------|
       | h1      | 24px     | 32px     | 2 times    |
       | h2      | 18px     | 24px     | 1.5 times  |
       | h3      | 14px     | 18px     | 2px larger |
       | body    | 12px     | 16px     | base       |
   - use a new font. @font-face
     #+begin_src css
     /* define the font */
     @font-face {
       font-family:"Name of the new font";
       src:url("./aa/bb.eot");
     }
     
     /* use the font */
     h1 {
         font-family:"Name of the new font";
     }
     #+end_src
     - font formats: eot, woff, tty, svg. Different support different font formats. So all formats should be provided.
   - many propertys
     | name            | description                          | example              |
     |-----------------+--------------------------------------+----------------------|
     | font-weight     |                                      |                      |
     | font-style      | normal, italic, oblique              |                      |
     | text-transform  | lowercase, uppercase, capitalize     |                      |
     | text-decoration | underline, overline, line-through    |                      |
     | line-height     |                                      |                      |
     | align           | left, right, center, justify         |                      |
     | vertical-align  | top, middle, bottom                  | only works on inline |
     |                 |                                      | element              |
     | text-indent     | can use negetive value, and can      |                      |
     |                 | be used to hide elements but still   |                      |
     |                 | let the element in the page          |                      |
     | letter-spacing  | When use UPPERCASE letters,          |                      |
     |                 | increase this makes more readable    |                      |
     | word-spacing    | default value is 0.2em.              |                      |
     | text-shadow     | left/right offset, top/bottom offset | 2px -3px #aaaaaa     |
     |                 | blur size, color                     | 1px 1px 2px #888888  |
   - pseudo element
     | name          | description                    | example        |
     |---------------+--------------------------------+----------------|
     | :first-letter | The first letter of an element | p:first-letter |
     | :first-line   | The first line of an element   | p:first-line   |
     pseudo element acts like there are a real element that can be styled.
   - pseudo class
     | name     | description                 | example |
     |----------+-----------------------------+---------|
     | :link    | for link not visited        |         |
     | :visited | for link visited            |         |
     | :hove    | when hovering on an element |         |
     | :focus   | when focus is on an element |         |
     | :active  | when a button is clicked    |         |
     note:
     - should appear in order
     - the first two are only for link(a) elements, the other are for all elements
   - attributes selector
     | name      | description                               | example         |
     |-----------+-------------------------------------------+-----------------|
     | exisence  | the attribute exists                      | p[class]        |
     | equal     | the attribute euquals to given value      | p[class="dog"]  |
     | space     | the value exists in list of space         | p[class~="dog"] |
     |           | seperated attribute                       |                 |
     | prefix    | the attribute' beginnig part is the value | p[class^="dog"] |
     | suffix    | the attribute' ending part is the value   | p[class$="dog"] |
     | substring | the attribute contains the value          | p[class*="aa"]  |
   - example
     #+begin_src html :tangle text_test.html
     <!DOCTYPE html>
     <head>
       <title>text_test</title>
       <style>
         body {
         font-size:12px;
         font-family:sans-serif;
         }
         h1 {
         font-size:24px;
         text-transform:capitalize;
         text-shadow:2px 2px 3px #000000;
         color:#008888;
         font-family:serif;
         }
         h2{
         font-size:18px;
         color:#008888;
         font-family:serif;
         text-transform:capitalize;
         }
         p.credit{
         text-transform:uppercase;
         color:#008888;
         letter-spacing:0.1em;
         word-spacing:0.2em;
         }
         p.intro:first-line{
         font-weight:bold;
         }
         p>span.keyword{
         color:#008888;
         }
         p.author{
         font-style:italic;
         text-align:right;
         }
       </style>
     </head>
     <body>
       <h1>briards</h1>
       <p class="credit">A heart wrapperd in fru</p>
       <p class="intro">The <span class="keyword">briard</span>, this is a bood for list evaluation. If you want to create3 a file.</p>
       <h2>breed history</h2>
       <p>The braiars, This buffer is for notes you don't want to save, and for Lisp evaluation. ;; If you want to create a file, visit that file with C-x C-f, ;; then enter the text in that file's own buffer.
       </p>
       <p class="author">by Ive Ducket</p>
     </body
     #+end_src
     note
     - in the original example, h2 is h3, and first p is h2. and h2's font-size is smaller than h3's. This is strange.
     - use class to indentify element instead of id. WHy?
      
** chapter 13 box
   - summary
     - width, height. If em used, it is relative to the containing text
     - centering a box. set a width, and set left and right margin to auto. For IE6 parent box's text-align should be set to center also.
     - padding, margin, border.
     - border/margin claspe. If one box in on top of another, then only one border will be shown.
     - display. none, inline, blox, inline-box
     - visibility. hidden, visible
     - overflow. hidden, scrool
     - ie6 box model quirk. It will treat box as bordered box by default. Given a DOCTYPE to fix this.
     - border-image. The image will be splited to 9 pieces. repeat, strench.
     - border-shadow. Much like text-shadow
     - border-radius. You can set horizontal and vertical values seperately.
   - example
     #+begin_src html :tangle box_example.html
     <!DOCTYPE html>
     <head>
       <title>box_example</title>
       <style>
         body {
         border:3px double #888888;
         font-size:16px;
         min-width:550px;
         font-family: "Courier New";
         }
         #wrapper{
         width:80%;
         min-width:500px;
         max-width:900px;
         margin:0 auto;
         }
         h1 {
         text-transform:uppercase;
         text-align:center;
         line-height:60%;
         }
         h1 .one{
         font-size:16px;
         color:#888888;
         }
         h1 .two{
         font-size:32px;
         letter-spacing:0.1em;
         }
         h1 .three{
         font-size:16px;
         color:#888888;
         letter-spacing:0.18em;
         }
         
         .nav {
         border-top:3px solid #000000;
         border-bottom:2px solid #888888;
         text-transform:uppercase;
         padding:0;
         }
         li {
         display:inline-block;
         width:20%;
         text-align:center;
         padding:1em 0;
         margin:0 0;
         }
         img{
         margin:0;
         width:33.33%;
         }
         p.description{
         text-align:center;
         }
       </style>
     </head>
     <body>
       <div id="wrapper">
         <h1><span class="one">the</span><br />
           <span class="two">analog</span><br />
           <span class="three">specialists</span>
         </h1>
         <ul class="nav">
           <li>home</li><li>for sale</li><li>repairs</li><li>about</li><li>contact</li>
         </ul>
     
         <img src="a1.jpeg"><img src="a2.jpeg"><img src="a3.jpeg">
     
         <p class="description">We specialise in the sales and repair of classic keyboards, in particular the Fendar Rhodes, Wulizer EP200, Hobner Clavnet.
         <p>
       </div>
     </body>
     #+end_src
     Note:
     - for inline element(such as img, li with dispaly set to inline-block), there will be a margin between elements event the margin is set to 0. This is because there are whitespace between the elements in html file. Can be fixed by removing the whitespaces(both space, tab and newline).

     - TODO read the source code given by the book.
** chapter 14 lists, tables and forms
*** lists
    | property            | description      | value                                  |
    |---------------------+------------------+----------------------------------------|
    | list-style-type     | the bullet type. | for ul: none, circle, squre, disc      |
    |                     |                  | for ol: decimal, decimal-leading-zero  |
    |                     |                  | , lower-alpha, upper-alpha, low-roman, |
    |                     |                  | upper-roman                            |
    | list-style-image    | image bullet     | url("image/a.png")                     |
    | list-style-position | if the bullet is | inside(default value)                   |
    |                     | in or out the    | outside                                |
    |                     | text box         |                                        |
    | list-style          | the shorthand    | define the above three property in     |
    |                     |                  | any order                              |
*** tables
    | property         | description                | value               |
    |------------------+----------------------------+---------------------|
    | width            | table width                |                     |
    | height           | table height               |                     |
    | border           | border                     |                     |
    | border-bottom    |                            |                     |
    | border-top       |                            |                     |
    | background-color | background-color           |                     |
    | text-align       | alignment for text         |                     |
    | padding          | padding for table cell     |                     |
    | text-transform   |                            |                     |
    | letter-spacing   |                            |                     |
    | font-size        |                            |                     |
    | :hover           |                            |                     |
    | empty-cells      | show or hide empty cells   | show, hide, inherit |
    |                  | border                     |                     |
    | border-spacing   | space between cells. If    |                     |
    |                  | use two value, horizental  |                     |
    |                  | and vertical               |                     |
    | border-collapse  | if borders of ajacent cell | collapse, seperate  |
    |                  | should be collapsed.       |                     |
    
    Guildlines on how to make tables look clean and easy to follow:
     - give cells padding. Then contents of cells will not touch a border.
     - distinguish headings. bold, uppercase, border on heading cells.
     - shade alternate rows. Different color for every other row.
     - align numbers to right. So that large numbers are clearly distinguished
*** forms
    - align input field. Give a width to label and align to right. The author also use float, but I don't know why(TODO: find the reason).
    - input text background-image. display an image on one side of the input text.
    - filedset and legend style. Can use command property on these elements.
*** example
    #+begin_src html :tangle list_table_form_example.html
    <!DOCTYPE html>
    <head>
      <title>list_table_form_example</title>
      <style>
    
        ul {
        list-style-image:url("./html&css--design-and-build-websites/html-and-css-book-code-0915/html-and-css-book-code-0915/chapter-14/images/icon-plus.png");
        }
        table, tr,th,td {
        border:1px solid #666666;
        border-collapse:collapse;
        }
        th, td{
        padding:8px 6px;
        }
        table {
        border-collapse:seperate;
        border-radius:10px;
        }
        tr:nth-child(odd) {
        background-color:#aaaadd;
        }
        tr:nth-child(even) {
        background-color:#ccccee;
        }
        tr:nth-child(1) {
        background-color:#8888DD;
        color:white;
        border-bottom:4px solid #6666EE;
        }
        form .title{
        width:9em;
        display:inline-block;
        line-height:2em;
        }
        form {
        width:22em;
        }
        fieldset{
        border-radius: 5px;
        }
        legend{
        font-style:italic;
        }
      </style>
    </head>
    <body>
      <h1>Peroty Workshops</h1>
      <p>We will conduction...</p>
      <p>Please not that the following ... </p>
      <ul>
        <li>A Pertric Perspective</li>
        <li>Walt Winterman at War</li>
        <li>Found poems and outside poretry</li>
      </ul>
      <table>
        <tr>
          <th></th>
          <th>New Youk</th>
          <th>Chikago</th>
          <th>Sanfransisco</th>
        </tr>
        <tr>
          <th>A Perotectic Persperctive</th>
          <td>San, 4 Feb 2012<br />11am-2pm</td>
          <td>San, 4 Feb 2012<br />11am-2pm</td>
          <td>San, 4 Feb 2012<br />11am-2pm</td>
        </tr>
        <tr>
          <th>A Perotectic Persperctive</th>
          <td>San, 4 Feb 2012<br />11am-2pm</td>
          <td>San, 4 Feb 2012<br />11am-2pm</td>
          <td>San, 4 Feb 2012<br />11am-2pm</td>
        </tr>
        <tr>
          <th>A Perotectic Persperctive</th>
          <td>San, 4 Feb 2012<br />11am-2pm</td>
          <td>San, 4 Feb 2012<br />11am-2pm</td>
          <td>San, 4 Feb 2012<br />11am-2pm</td>
        </tr>
        <tr>
          <th>A Perotectic Persperctive</th>
          <td>San, 4 Feb 2012<br />11am-2pm</td>
          <td>San, 4 Feb 2012<br />11am-2pm</td>
          <td>San, 4 Feb 2012<br />11am-2pm</td>
        </tr>
      </table>
      
      <form>
        <fieldset>
          <legend>Register your interest</legend>
          <label><span class="title">
              Your name:</span><input name="name" type="text"></label> <br />
          <label><span class="title">
              Your email:</span><input name="email" type="email"></label> <br />
          <label><span class="title">
              Your colsest center:</span>
            <select name="center">
              <option value="NewYork">New York</option>
              <option value="chicago">Chicago</option>
          </select></label>
          <p><span class="title">
              Are you a member?</span>
            <label> <input name="member" type="radio" value="yes">Yes</label>
            <label> <input name="member" type="radio" value="no">No</label>
          </p>
                </body
    #+end_src
    TODO: the table border radius can't work.
    TODO: the input box doesn't align correctly.
    
** chapter 15 layout
   - Summary
     - element position. the ~position~ property. Values are ~static~ (defaunt value), ~relative~, ~absolute~, ~fixed~. The ~float~ property, values are ~left~, ~right~.
       - A bug using ~float~. If an element's chilren are all floating boxes, then its height will be 0 no matter what height chirdren elements have. Fixed by adding two rules to this element.
         #+begin_src css
         overflow:auto;
         width:100%;
         #+end_src
     - screen resolution. Width: 960-1000 pixels, height: 570-600 pixels. 'fold space'. The visible area without scrolling has large impact on the vistor's decision.
     - fixed and lyquid layout. The first use pixels, the second use percentage. Both have advantages and disadvantages.
     - grid system. 960 pixels grid. 12 columns, each 60 pixels width, with 10px margin(so the margin between columns is 20px). Grid is commonly used by all kinds of designers.
       - css frameworks. 960.gs. The official sites gives many websites examples that using grid.
     - multiple style sheet. 
       - method 1. @import css rule.
       - method 2. link element
   - example
     Use 960.gs to complete the task.
** chapter 16 image
   - summary
     - size. Using ~width~ and ~height~ css property. Commonly defined classes such as "large", "medium", "small". Images in a website are mostly in same size.
     - align. using float property to align to left or right. To align to center, using ~display:block~, and set a width and margin to auto. Class names ~align-left~, ~align-right~, ~align-center~ are good.
     - background image. 
       - background-image: url("images/bg.png")
       - background-repeat: repeat, repeat-x, repeat-y, no-repeat
       - background-atatchment: fixed, scrool.  If the image should fixed on screen or scrool with the text.
       - background-position: [left, center, right], [top, center, bottom].
       - background:url("images/bg.png") no-repeat, fixed, left, center
     - rollover or sprites. Using different parts of an image as if they are different images, but set different background-position.
     - background gradient: background-image: -moz-linear-gradient(#000000 #ffffff)
     - image contrast. If image is used as background, it should be low contrast, else the text will not be seen clearly.
   - points
     - To display an image, then some text in one line. You can set backgournd-image to that image, no-repeat, left positioned, and set padding-left to the width of that image.
     - html figure and figcaption.
     - image sprites





         
** chapter 17 html5 layout
   - summary
     - new elements introduced in html5. 
       | name       | description                                           |
       |------------+-------------------------------------------------------|
       | header     | page header: heading, nav;                            |
       |            | artical or setion header:                             |
       | nav        | navigation                                            |
       | adide      | page or article                                       |
       | article    |                                                       |
       | section    | Don't use as a wrapper, div is the best for this case |
       | hgroup     | header group                                          |
       | figure     |                                                       |
       | figcaption |                                                       |
       |            |                                                       |
     - adapt to old browser. New element will be treated as inline element, so they should set as block element. For IE lower than 9, a js script is needed, htmlshiv, or the content can't be seen.
   - example
     #+begin_src html :tangle html5_layout_example.html
     <!DOCTYPE html>
     <head>
       <title>html5_layout_example</title>
       <style>
         ul {
         display:inline;
         list-style-type:none;
         }
       </style>
     </head>
     <body>
       <header>
         <img id="logo" src="aa.png"></img>
         <hgroup>
           <h1>YOKO's KITCHEN</h1>
           <h2>JAPANESE COOKING CLASSES</h2>
         </hgroup>
         <nav>
           <ul>
             <li><a href="home.html" alt="home" class="active">Home</a></li>
             <li><a href="classes.html" alt="classes" >Classes</a></li>
             <li><a href="about.html" alt="about" >About</a></li>
           </ul>
         </nav>
       </header>
       <div id="content">
         <artical>
         </artical>
         <artical>
         </artical>
       </div>
       <aside>
       </aside>
       <footer>
         &copy
       </footer>
     </body
     #+end_src

